{"ast":null,"code":"export function isValidMove(board, from, to, turn) {\n  const piece = board[from.row][from.col];\n  if (!piece) return false; // No piece to move\n\n  const isWhite = piece === piece.toUpperCase();\n  if (turn === \"white\" && !isWhite || turn === \"black\" && isWhite) {\n    return false; // Can't move opponent's pieces\n  }\n\n  // Simple pawn move logic (can be expanded)\n  if (piece.toLowerCase() === 'p') {\n    const direction = isWhite ? -1 : 1; // White moves up, Black moves down\n    if (to.row === from.row + direction && to.col === from.col && !board[to.row][to.col]) {\n      return true; // Move forward\n    }\n    if (to.row === from.row + direction && Math.abs(to.col - from.col) === 1 && board[to.row][to.col]) {\n      return true; // Capture\n    }\n  }\n  return true; // For now, allow all moves (expand later for real chess logic)\n}","map":{"version":3,"names":["isValidMove","board","from","to","turn","piece","row","col","isWhite","toUpperCase","toLowerCase","direction","Math","abs"],"sources":["/Users/mikeb/CV_projects/chess-app/src/utils/chessLogic.js"],"sourcesContent":["export function isValidMove(board, from, to, turn) {\n    const piece = board[from.row][from.col];\n    if (!piece) return false;  // No piece to move\n  \n    const isWhite = piece === piece.toUpperCase();\n    if ((turn === \"white\" && !isWhite) || (turn === \"black\" && isWhite)) {\n      return false;  // Can't move opponent's pieces\n    }\n  \n    // Simple pawn move logic (can be expanded)\n    if (piece.toLowerCase() === 'p') {\n      const direction = isWhite ? -1 : 1;  // White moves up, Black moves down\n      if (to.row === from.row + direction && to.col === from.col && !board[to.row][to.col]) {\n        return true; // Move forward\n      }\n      if (to.row === from.row + direction && Math.abs(to.col - from.col) === 1 && board[to.row][to.col]) {\n        return true; // Capture\n      }\n    }\n  \n    return true;  // For now, allow all moves (expand later for real chess logic)\n  }\n  "],"mappings":"AAAA,OAAO,SAASA,WAAWA,CAACC,KAAK,EAAEC,IAAI,EAAEC,EAAE,EAAEC,IAAI,EAAE;EAC/C,MAAMC,KAAK,GAAGJ,KAAK,CAACC,IAAI,CAACI,GAAG,CAAC,CAACJ,IAAI,CAACK,GAAG,CAAC;EACvC,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK,CAAC,CAAE;;EAE3B,MAAMG,OAAO,GAAGH,KAAK,KAAKA,KAAK,CAACI,WAAW,CAAC,CAAC;EAC7C,IAAKL,IAAI,KAAK,OAAO,IAAI,CAACI,OAAO,IAAMJ,IAAI,KAAK,OAAO,IAAII,OAAQ,EAAE;IACnE,OAAO,KAAK,CAAC,CAAE;EACjB;;EAEA;EACA,IAAIH,KAAK,CAACK,WAAW,CAAC,CAAC,KAAK,GAAG,EAAE;IAC/B,MAAMC,SAAS,GAAGH,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE;IACrC,IAAIL,EAAE,CAACG,GAAG,KAAKJ,IAAI,CAACI,GAAG,GAAGK,SAAS,IAAIR,EAAE,CAACI,GAAG,KAAKL,IAAI,CAACK,GAAG,IAAI,CAACN,KAAK,CAACE,EAAE,CAACG,GAAG,CAAC,CAACH,EAAE,CAACI,GAAG,CAAC,EAAE;MACpF,OAAO,IAAI,CAAC,CAAC;IACf;IACA,IAAIJ,EAAE,CAACG,GAAG,KAAKJ,IAAI,CAACI,GAAG,GAAGK,SAAS,IAAIC,IAAI,CAACC,GAAG,CAACV,EAAE,CAACI,GAAG,GAAGL,IAAI,CAACK,GAAG,CAAC,KAAK,CAAC,IAAIN,KAAK,CAACE,EAAE,CAACG,GAAG,CAAC,CAACH,EAAE,CAACI,GAAG,CAAC,EAAE;MACjG,OAAO,IAAI,CAAC,CAAC;IACf;EACF;EAEA,OAAO,IAAI,CAAC,CAAE;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}