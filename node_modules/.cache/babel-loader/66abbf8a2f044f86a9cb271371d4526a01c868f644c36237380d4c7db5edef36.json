{"ast":null,"code":"var _jsxFileName = \"/Users/mikeb/CV_projects/chess-app/src/components/ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { initialBoard, pieceSymbols } from '../utils/chess';\nimport { isValidMove, switchTurn } from '../utils/chessLogic';\nimport './ChessBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [turn, setTurn] = useState(\"white\");\n  const handleCellClick = (row, col) => {\n    if (!selectedCell) {\n      if (board[row][col] !== \"\") {\n        setSelectedCell({\n          row,\n          col\n        });\n      }\n      return;\n    }\n    if (isValidMove(board, selectedCell, {\n      row,\n      col\n    }, turn, [])) {\n      const newBoard = board.map(r => [...r]);\n      newBoard[row][col] = board[selectedCell.row][selectedCell.col];\n      newBoard[selectedCell.row][selectedCell.col] = \"\";\n      setBoard(newBoard);\n      setTurn(switchTurn(turn));\n    }\n    setSelectedCell(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-board\",\n    children: [board.map((rowData, rowIndex) => rowData.map((cellData, colIndex) => {\n      const isLight = (rowIndex + colIndex) % 2 === 0;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cell ${isLight ? 'light' : 'dark'}`,\n        onClick: () => handleCellClick(rowIndex, colIndex),\n        children: cellData && pieceSymbols[cellData]\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this);\n    })), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turn: \", turn.toUpperCase()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(ChessBoard, \"9U313MF7+w2pquhc33FF3PNcC1s=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","initialBoard","pieceSymbols","isValidMove","switchTurn","jsxDEV","_jsxDEV","ChessBoard","_s","board","setBoard","selectedCell","setSelectedCell","turn","setTurn","handleCellClick","row","col","newBoard","map","r","className","children","rowData","rowIndex","cellData","colIndex","isLight","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/mikeb/CV_projects/chess-app/src/components/ChessBoard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { initialBoard, pieceSymbols } from '../utils/chess';\nimport { isValidMove, switchTurn } from '../utils/chessLogic';\nimport './ChessBoard.css';\n\nconst ChessBoard = () => {\n    const [board, setBoard] = useState(initialBoard);\n    const [selectedCell, setSelectedCell] = useState(null);\n    const [turn, setTurn] = useState(\"white\");\n\n    const handleCellClick = (row, col) => {\n        if (!selectedCell) {\n            if (board[row][col] !== \"\") {\n                setSelectedCell({ row, col });\n            }\n            return;\n        }\n\n        if (isValidMove(board, selectedCell, { row, col }, turn, [])) {\n            const newBoard = board.map((r) => [...r]);\n            newBoard[row][col] = board[selectedCell.row][selectedCell.col];\n            newBoard[selectedCell.row][selectedCell.col] = \"\";\n            setBoard(newBoard);\n            setTurn(switchTurn(turn));  \n        }\n\n        setSelectedCell(null);\n    };\n\n    return (\n        <div className=\"chess-board\">\n            {board.map((rowData, rowIndex) =>\n                rowData.map((cellData, colIndex) => {\n                    const isLight = (rowIndex + colIndex) % 2 === 0;\n                    return (\n                        <div\n                            key={`${rowIndex}-${colIndex}`}\n                            className={`cell ${isLight ? 'light' : 'dark'}`}\n                            onClick={() => handleCellClick(rowIndex, colIndex)}\n                        >\n                            {cellData && pieceSymbols[cellData]}\n                        </div>\n                    );\n                })\n            )}\n            <p>Turn: {turn.toUpperCase()}</p>\n        </div>\n    );\n};\n\nexport default ChessBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,YAAY,QAAQ,gBAAgB;AAC3D,SAASC,WAAW,EAAEC,UAAU,QAAQ,qBAAqB;AAC7D,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACC,YAAY,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMe,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IAClC,IAAI,CAACN,YAAY,EAAE;MACf,IAAIF,KAAK,CAACO,GAAG,CAAC,CAACC,GAAG,CAAC,KAAK,EAAE,EAAE;QACxBL,eAAe,CAAC;UAAEI,GAAG;UAAEC;QAAI,CAAC,CAAC;MACjC;MACA;IACJ;IAEA,IAAId,WAAW,CAACM,KAAK,EAAEE,YAAY,EAAE;MAAEK,GAAG;MAAEC;IAAI,CAAC,EAAEJ,IAAI,EAAE,EAAE,CAAC,EAAE;MAC1D,MAAMK,QAAQ,GAAGT,KAAK,CAACU,GAAG,CAAEC,CAAC,IAAK,CAAC,GAAGA,CAAC,CAAC,CAAC;MACzCF,QAAQ,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGR,KAAK,CAACE,YAAY,CAACK,GAAG,CAAC,CAACL,YAAY,CAACM,GAAG,CAAC;MAC9DC,QAAQ,CAACP,YAAY,CAACK,GAAG,CAAC,CAACL,YAAY,CAACM,GAAG,CAAC,GAAG,EAAE;MACjDP,QAAQ,CAACQ,QAAQ,CAAC;MAClBJ,OAAO,CAACV,UAAU,CAACS,IAAI,CAAC,CAAC;IAC7B;IAEAD,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACIN,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,GACvBb,KAAK,CAACU,GAAG,CAAC,CAACI,OAAO,EAAEC,QAAQ,KACzBD,OAAO,CAACJ,GAAG,CAAC,CAACM,QAAQ,EAAEC,QAAQ,KAAK;MAChC,MAAMC,OAAO,GAAG,CAACH,QAAQ,GAAGE,QAAQ,IAAI,CAAC,KAAK,CAAC;MAC/C,oBACIpB,OAAA;QAEIe,SAAS,EAAE,QAAQM,OAAO,GAAG,OAAO,GAAG,MAAM,EAAG;QAChDC,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAACS,QAAQ,EAAEE,QAAQ,CAAE;QAAAJ,QAAA,EAElDG,QAAQ,IAAIvB,YAAY,CAACuB,QAAQ;MAAC,GAJ9B,GAAGD,QAAQ,IAAIE,QAAQ,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAK7B,CAAC;IAEd,CAAC,CACL,CAAC,eACD1B,OAAA;MAAAgB,QAAA,GAAG,QAAM,EAACT,IAAI,CAACoB,WAAW,CAAC,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd,CAAC;AAACxB,EAAA,CA3CID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}